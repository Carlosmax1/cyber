version: '3.8'

volumes:
  data:

services:
  front:
    build:
      context: ./client
      dockerfile: Dockerfile
    hostname: front
    working_dir: /app
    command: ['npm', 'run', 'build']
    volumes:
      - ./client:/app
      - /app/node_modules

  db:
    image: postgres
    hostname: db
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: cyber
    volumes:
      - data:/var/lib/postgresql/data
      - type: tmpfs
        target: /dev/shm
  rabbitmq:
    image: rabbitmq:4.0.5-management
    container_name: rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    hostname: api
    container_name: api
    ports:
      - '3333:3333'
    environment:
      DATABASE_URL: 'postgresql://postgres:root@db:5432/cyber'
      RABBIT_URL: 'amqp://rabbitmq:5672'
      HOST: '0.0.0.0'
      PORT: '3333'
    depends_on:
      - db
      - rabbitmq

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/dist:/usr/share/nginx/html # Certifique-se que o build da front-end est√° em /client/dist
    depends_on:
      - front
      - api

  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    hostname: python
    container_name: python
